#include <WiFi.h>
#include "ThingSpeak.h"
#include <LiquidCrystal_I2C.h>
#include "DHT.h"
#define DHTPIN 4
#define DHTTYPE DHT22
DHT dht(DHTPIN, DHTTYPE);
int lcdColumns = 16;
int lcdRows = 2;
LiquidCrystal_I2C lcd(0x27, lcdColumns, lcdRows);


const char* ssid = "try_wifi"; // your network SSID (name)
const char* password = "12345678"; // your network password
WiFiClient client;
unsigned long myChannelNumber = 2699952;
const char * myWriteAPIKey = "XWEE2S88IYG0EMHK";



const int trigPin = 5;
const int echoPin = 18;
int t, h, G1 = 34, G2 = 35, G3 = 32, G4 = 13, buzzer = 19;

int a = 8000, b = 8000, c = 8000, d = 8000;

long duration;
float distanceCm;
float distanceInch;
void setup()
{

  Serial.begin(9600); // Initialize serial
  lcd.begin();
  dht.begin();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("  Searching ");
  lcd.setCursor(0, 1);
  lcd.print("   network");
  delay(1000);

  pinMode(G1, INPUT);
  pinMode(G2, INPUT);
  pinMode(G3, INPUT);
  pinMode(G4, INPUT);
  pinMode(buzzer, OUTPUT);

  pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
  pinMode(echoPin, INPUT); // Sets the echoPin as an Input
#define SOUND_SPEED 0.034
#define CM_TO_INCH 0.393701

  WiFi.mode(WIFI_STA);

  if (WiFi.status() != WL_CONNECTED)

  {
    // Serial.print("Attempting to connect");
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Attempting network");
    lcd.setCursor(0, 1);
    lcd.print("to connect");

    while (WiFi.status() != WL_CONNECTED )

    {

      WiFi.begin(ssid, password);

      delay(1000);
    }

    //Serial.println("\nConnected. ");

  }

  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("     WIFI ");
  lcd.setCursor(0, 1);
  lcd.print("   CONNECTED");
  delay(1000);

  beep();

  ThingSpeak.begin(client); // Initialize ThingSpeak

  intro_sms();

  beep();

}

void loop()
{

main:
  int G1_DATA = analogRead(G1);
  int G2_DATA = analogRead(G2);
  int G3_DATA = analogRead(G3);
  int G4_DATA = analogRead(G4);


  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distanceCm = duration * SOUND_SPEED / 2;

  float h = dht.readHumidity();
  float t = dht.readTemperature();
  float f = dht.readTemperature(true);





  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("G1:");
  lcd.print(G1_DATA);
  lcd.print(" G2:");
  lcd.print(G2_DATA);
  lcd.setCursor(0, 1);
  lcd.print("G3:");

  lcd.print(G3_DATA);
  lcd.print(" G4:");
  lcd.print(G4_DATA);
  delay(4000);





  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("DIS: ");
  lcd.print(distanceCm);
  lcd.print(" CM");
  lcd.setCursor(0, 1);
  lcd.print("T:");
  lcd.print(t);

  lcd.print(" H:");
  lcd.print(h);
  delay(4000);


  ThingSpeak.setField(1, G1_DATA);
  ThingSpeak.setField(2, G2_DATA);
  ThingSpeak.setField(3, G3_DATA);
  ThingSpeak.setField(4, G4_DATA);

  ThingSpeak.setField(5, t);
  ThingSpeak.setField(6, h);
  ThingSpeak.setField(7, distanceCm);

  int x = ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey );

  if (x == 200)

  {




    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Channel update");
    lcd.setCursor(0, 1);
    lcd.print("  successful");
    delay(3000);

  }

  else

  {



    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Problem updating");
    lcd.setCursor(0, 1);
    lcd.print(x);
    delay(3000);


  }

  delay(5000);

  if (G1_DATA > a)
  {
    G1_sms();
  }

  if (G2_DATA > b)
  {
    G2_sms();
  }

  if (G3_DATA > c)
  {
    G3_sms();
  }

  if (G4_DATA > d)
  {
    G4_sms();
  }

}



void intro_sms()
{



  lcd.clear();
  lcd.print("   INTRO");
  lcd.setCursor(0, 1);
  lcd.print(" SMS SENT");

  delay(1000);

  Serial.println("AT");
  delay(1000);
  Serial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial.println("AT+CMGS=\"9655244999\"\r"); // Replace x with mobile number
  delay(1000);
  Serial.println("project raedy");// The SMS text you want to send
  delay(100);
  Serial.println((char)26);// ASCII code of CTRL+Z


}



void G1_sms()
{



  lcd.clear();
  lcd.print("SENSOR 1 ALERT");
  lcd.setCursor(0, 1);
  lcd.print("    SMS SENT");

  delay(1000);

  Serial.println("AT");
  delay(1000);
  Serial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial.println("AT+CMGS=\"9655244999\"\r"); // Replace x with mobile number
  delay(1000);
  Serial.println("GAS DETECTED ");// The SMS text you want to send
  delay(100);
  Serial.println((char)26);// ASCII code of CTRL+Z


}


void G2_sms()
{



  lcd.clear();
  lcd.print("SENSOR 2 ALERT");
  lcd.setCursor(0, 1);
  lcd.print("    SMS SENT");
  delay(1000);

  Serial.println("AT");
  delay(1000);
  Serial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial.println("AT+CMGS=\"9655244999\"\r"); // Replace x with mobile number
  delay(1000);
  Serial.println("GAS DETECTED");// The SMS text you want to send
  delay(100);
  Serial.println((char)26);// ASCII code of CTRL+Z


}


void G3_sms()
{



  lcd.clear();
  lcd.print("SENSOR 3 ALERT");
  lcd.setCursor(0, 1);
  lcd.print("    SMS SENT");
  delay(1000);

  Serial.println("AT");
  delay(1000);
  Serial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial.println("AT+CMGS=\"9655244999\"\r"); // Replace x with mobile number
  delay(1000);
  Serial.println("GAS DETECTED");// The SMS text you want to send
  delay(100);
  Serial.println((char)26);// ASCII code of CTRL+Z


}


void G4_sms()
{



  lcd.clear();
  lcd.print("SENSOR 4 ALERT");
  lcd.setCursor(0, 1);
  lcd.print("    SMS SENT");
  delay(1000);

  Serial.println("AT");
  delay(1000);
  Serial.println("AT+CMGF=1");    //Sets the GSM Module in Text Mode
  delay(1000);  // Delay of 1000 milli seconds or 1 second
  Serial.println("AT+CMGS=\"9655244999\"\r"); // Replace x with mobile number
  delay(1000);
  Serial.println("GAS DETECTED");// The SMS text you want to send
  delay(100);
  Serial.println((char)26);// ASCII code of CTRL+Z


}







void beep()
{
  digitalWrite(buzzer, 1);
  delay(300);
  digitalWrite(buzzer, 0);
  delay(300);




}